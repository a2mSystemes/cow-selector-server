#!/bin/bash
# Script de mise √† jour s√©curitaire automatique pour VMix Server
# Usage: ./security-update.sh

set -e  # Arr√™ter en cas d'erreur

echo "üõ°Ô∏è D√©but de la mise √† jour s√©curitaire VMix Server..."
echo "=================================================="

# Variables
PROJECT_ROOT=$(pwd)
BACKUP_DIR="${PROJECT_ROOT}/backup-$(date +%Y%m%d_%H%M%S)"

# √âtape 1 : Sauvegarde
echo "üìÅ Cr√©ation de sauvegarde..."
mkdir -p "$BACKUP_DIR"
cp package.json "$BACKUP_DIR/"
cp package-lock.json "$BACKUP_DIR/" 2>/dev/null || true
cp -r node_modules "$BACKUP_DIR/" 2>/dev/null || true
echo "‚úÖ Sauvegarde cr√©√©e : $BACKUP_DIR"

# √âtape 2 : Audit initial
echo "üîç Audit de s√©curit√© initial..."
npm audit --audit-level=moderate || echo "‚ö†Ô∏è Vuln√©rabilit√©s d√©tect√©es"

# √âtape 3 : Nettoyage
echo "üßπ Nettoyage des anciens modules..."
rm -rf node_modules package-lock.json

# √âtape 4 : Installation des nouvelles versions
echo "üì¶ Installation des nouvelles versions s√©curis√©es..."
npm install

# √âtape 5 : Correction automatique
echo "üîß Correction automatique des vuln√©rabilit√©s..."
npm audit fix || echo "‚ö†Ô∏è Certaines vuln√©rabilit√©s n√©cessitent une intervention manuelle"

# √âtape 6 : Test de compilation
echo "üìù Test de compilation TypeScript..."
npm run build:server

# √âtape 7 : Test rapide du serveur
echo "üöÄ Test rapide du serveur..."
timeout 15s npm run dev &
SERVER_PID=$!
sleep 8

# Test health check
echo "üíì Test health check..."
curl -f http://localhost:3000/health >/dev/null 2>&1 && echo "‚úÖ Serveur OK" || echo "‚ö†Ô∏è Serveur non accessible"

# Arr√™ter le serveur de test
kill $SERVER_PID 2>/dev/null || true
sleep 2

# √âtape 8 : Audit final
echo "üîç Audit de s√©curit√© final..."
AUDIT_RESULT=$(npm audit --audit-level=high 2>&1 || true)
if echo "$AUDIT_RESULT" | grep -q "found 0 vulnerabilities"; then
    echo "‚úÖ Aucune vuln√©rabilit√© critique trouv√©e"
else
    echo "‚ö†Ô∏è Vuln√©rabilit√©s restantes :"
    echo "$AUDIT_RESULT"
fi

# √âtape 9 : Mise √† jour du client Angular
echo "üÖ∞Ô∏è Mise √† jour du client Angular..."
if [ -d "client" ]; then
    cd client
    npm audit fix || echo "‚ö†Ô∏è Correction client Angular partielle"
    cd ..
    echo "‚úÖ Client Angular mis √† jour"
else
    echo "‚ö†Ô∏è Dossier client non trouv√©"
fi

# √âtape 10 : R√©sum√©
echo ""
echo "üéâ Mise √† jour s√©curitaire termin√©e !"
echo "====================================="
echo "üìÅ Sauvegarde : $BACKUP_DIR"
echo "üîç Pour v√©rifier : npm run security:check"
echo "üöÄ Pour tester : npm run dev"
echo ""
echo "üìã Versions mises √† jour :"
echo "   - xlsx: $(npm list xlsx --depth=0 2>/dev/null | grep xlsx || echo 'Non install√©')"
echo "   - multer: $(npm list multer --depth=0 2>/dev/null | grep multer || echo 'Non install√©')"
echo "   - helmet: $(npm list helmet --depth=0 2>/dev/null | grep helmet || echo 'Non install√©')"
echo "   - express: $(npm list express --depth=0 2>/dev/null | grep express || echo 'Non install√©')"
echo ""

# √âtape 11 : Recommandations
echo "üí° Recommandations :"
echo "   1. Testez l'application compl√®tement"
echo "   2. V√©rifiez les fonctionnalit√©s d'upload Excel"
echo "   3. Confirmez que l'API fonctionne"
echo "   4. Ex√©cutez npm run security:audit p√©riodiquement"
echo ""
echo "üõ°Ô∏è Votre application est maintenant plus s√©curis√©e !"
